on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: '*'
  pull_request:
    branches: [ main, windows ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SBCL
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install sbcl

      - uses: actions/cache@v4
        id: restore-fasl-cache
        with:
          path: ~/.cache/common-lisp
          key: ${{ runner.os }}-ocicl-${{ hashFiles('systems.csv','ocicl.csv') }}
          restore-keys: |
            ${{ runner.os }}-ocicl-

      - name: Bump FASL timestamps (Linux/macOS)
        if: steps.restore-fasl-cache.outputs.cache-hit == 'true'
        run: |
          # Recursively touch every *.fasl in the ASDF cache
          find "~/.cache/common-lisp" -type f -name '*.fasl' -print0 | xargs -0 touch

      - name: Build and Install
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          sbcl --load setup.lisp
          ocicl version
          ocicl setup > ~/.sbclrc
          echo "(setf ocicl-runtime:*verbose* nil)" >> ~/.sblrc
        shell: bash

#      - name: Test
#        run: |
#          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
#          rm -rf systems systems.csv ocicl
#          mkdir test
#          cd test
#          touch ocicl.csv
#          ocicl install sento
#          ls -l ocicl
#          ls -l ocicl.csv
#          cat ocicl.csv
#          sbcl --non-interactive --eval "(asdf:load-system :sento)" --eval "(quit)"
#          sbcl --non-interactive --eval "(asdf:load-system :cl-etcd)" --eval "(quit)"
#          rm -rf ocicl
#          ocicl install
#          ocicl latest
#        shell: bash
