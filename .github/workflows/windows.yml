on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: '*'
  pull_request:
    branches: [ main, windows ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
       include:
         - SBCL_VERSION: 2.4.9
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          install: make unzip
      - name: download SBCL
        run: wget https://downloads.sourceforge.net/project/sbcl/sbcl/${{ matrix.SBCL_VERSION }}/sbcl-${{ matrix.SBCL_VERSION }}-x86-64-windows-binary.msi
      - name: install SBCL
        # for unknown reason, msiexec pops up a window under msys2, so use cmd instead
        shell: cmd
        run: msiexec /a sbcl-${{ matrix.SBCL_VERSION }}-x86-64-windows-binary.msi TARGETDIR=C:\sbcl /qn
      - name: Show OpenSSL version
        shell: pwsh
        run: |
          openssl version              # should print e.g. "OpenSSL 3.3.1..."
          where libssl*.dll
      - name: Ensure OpenSSL runtime is present
        shell: pwsh
        run: |
          # If the DLL isn't already there, install the light runtime
          if (-not (Test-Path 'C:\Program Files\OpenSSL-Win64\bin\libssl-3-x64.dll')) {
              choco install openssl.light --version 3.3.1 -y --no-progress   # or any version you need
          }
          # Make sure the DLL directory is on PATH for the rest of the job
          echo "C:\Program Files\OpenSSL-Win64\bin" | Out-File $env:GITHUB_PATH -Append
    - name: Set git to use LF
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
      - name: Build using Setup (bash)
        shell: bash
        run: |
          SBCL="c:\sbcl\Pfiles\\"Steel\ Bank\ Common\ Lisp\\"\sbcl.exe" /c/sbcl/Pfiles/"Steel Bank Common Lisp"/sbcl.exe --load setup.lisp
          ./ocicl.exe setup > ~/.sbclrc
          echo "(setf ocicl-runtime:*verbose* t)" >> ~/.sblrc
      - name: Test
        run: |
          export PATH=/c/Users/runneradmin/AppData/Local/ocicl/bin:$PATH
          rm -rf systems systems.csv ocicl
          mkdir test
          cd test
          touch ocicl.csv
          ocicl.exe -v install sento
          ls -l ocicl
          ls -l ocicl.csv
          cat ocicl.csv
          /c/sbcl/Pfiles/"Steel Bank Common Lisp"/sbcl.exe --non-interactive --eval "(setf ocicl-runtime:*verbose* t)" --eval "(asdf:load-system :sento)" --eval "(quit)"
          /c/sbcl/Pfiles/"Steel Bank Common Lisp"/sbcl.exe --non-interactive --eval "(setf ocicl-runtime:*verbose* t)" --eval "(asdf:load-system :cl-etcd)" --eval "(quit)"
          rm -rf ocicl
          ocicl.exe install
          ocicl.exe latest
        shell: bash
